<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yAzYrFn/B2nQ8rARy0FIAAAAAElFTkSuQmCC
</value>
  </data>
</root>