<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>